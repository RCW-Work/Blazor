#pragma checksum "D:\GitHub_Workspace\Blazor\BlazorSCADA\BlazorSCADA\Components\Test.razor" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "12834aea477e048a99c022b1d0f184139568ebd9"
// <auto-generated/>
#pragma warning disable 1591
namespace BlazorSCADA.Components
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Components;
#nullable restore
#line 1 "D:\GitHub_Workspace\Blazor\BlazorSCADA\BlazorSCADA\_Imports.razor"
using System.Net.Http;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "D:\GitHub_Workspace\Blazor\BlazorSCADA\BlazorSCADA\_Imports.razor"
using Microsoft.AspNetCore.Authorization;

#line default
#line hidden
#nullable disable
#nullable restore
#line 3 "D:\GitHub_Workspace\Blazor\BlazorSCADA\BlazorSCADA\_Imports.razor"
using Microsoft.AspNetCore.Components.Authorization;

#line default
#line hidden
#nullable disable
#nullable restore
#line 4 "D:\GitHub_Workspace\Blazor\BlazorSCADA\BlazorSCADA\_Imports.razor"
using Microsoft.AspNetCore.Components.Forms;

#line default
#line hidden
#nullable disable
#nullable restore
#line 5 "D:\GitHub_Workspace\Blazor\BlazorSCADA\BlazorSCADA\_Imports.razor"
using Microsoft.AspNetCore.Components.Routing;

#line default
#line hidden
#nullable disable
#nullable restore
#line 6 "D:\GitHub_Workspace\Blazor\BlazorSCADA\BlazorSCADA\_Imports.razor"
using Microsoft.AspNetCore.Components.Web;

#line default
#line hidden
#nullable disable
#nullable restore
#line 7 "D:\GitHub_Workspace\Blazor\BlazorSCADA\BlazorSCADA\_Imports.razor"
using Microsoft.JSInterop;

#line default
#line hidden
#nullable disable
#nullable restore
#line 8 "D:\GitHub_Workspace\Blazor\BlazorSCADA\BlazorSCADA\_Imports.razor"
using BlazorSCADA;

#line default
#line hidden
#nullable disable
#nullable restore
#line 9 "D:\GitHub_Workspace\Blazor\BlazorSCADA\BlazorSCADA\_Imports.razor"
using BlazorSCADA.Shared;

#line default
#line hidden
#nullable disable
    public partial class Test : Microsoft.AspNetCore.Components.ComponentBase
    {
        #pragma warning disable 1998
        protected override void BuildRenderTree(Microsoft.AspNetCore.Components.Rendering.RenderTreeBuilder __builder)
        {
            __builder.AddMarkupContent(0, "<h1>Counter</h1>\r\n\r\n");
            __builder.OpenElement(1, "p");
            __builder.AddContent(2, "Current count: ");
            __builder.AddContent(3, 
#nullable restore
#line 3 "D:\GitHub_Workspace\Blazor\BlazorSCADA\BlazorSCADA\Components\Test.razor"
                   currentCount

#line default
#line hidden
#nullable disable
            );
            __builder.CloseElement();
            __builder.AddMarkupContent(4, "\r\n\r\n");
            __builder.OpenElement(5, "button");
            __builder.AddAttribute(6, "class", "btn btn-primary");
            __builder.AddAttribute(7, "onclick", Microsoft.AspNetCore.Components.EventCallback.Factory.Create<Microsoft.AspNetCore.Components.Web.MouseEventArgs>(this, 
#nullable restore
#line 5 "D:\GitHub_Workspace\Blazor\BlazorSCADA\BlazorSCADA\Components\Test.razor"
                                          IncrementCount

#line default
#line hidden
#nullable disable
            ));
            __builder.AddContent(8, "Click me");
            __builder.CloseElement();
        }
        #pragma warning restore 1998
#nullable restore
#line 7 "D:\GitHub_Workspace\Blazor\BlazorSCADA\BlazorSCADA\Components\Test.razor"
       
    int currentCount = 0;

    [Parameter]
    public int IncrementAmount { get; set; } = 1;


    [Parameter]
    public EventCallback<MouseEventArgs> cbOnclick { get; set; }

    [Parameter]
    public EventCallback<int> cbTest{ get; set; }



    void IncrementCount()
    {
        currentCount += IncrementAmount;
        if (currentCount % 10 == 1)
        {
            cbTest.InvokeAsync(0);
        }
    }
    delegate void CustomAction();



    private int currentCount2 = 0;

    [Parameter]
    public Action<int> OnMultipleOfTwoAction { get; set; }

    [Parameter]
    public EventCallback<int> OnMultipleOfThree { get; set; }

    private async Task IncrementCount2()
    {

        if (currentCount2 % 2 == 0)
            OnMultipleOfTwoAction?.Invoke(currentCount2);

        if (currentCount2 % 3 == 0)
            await OnMultipleOfThree.InvokeAsync(currentCount2);
    }




#line default
#line hidden
#nullable disable
    }
}
#pragma warning restore 1591
